<?php

namespace Container4xMqaAq;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getForm_RegistryService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'form.registry' shared service.
     *
     * @return \Symfony\Component\Form\FormRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/FormRegistryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/FormRegistry.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/FormExtensionInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/Extension/DependencyInjection/DependencyInjectionExtension.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/ResolvedFormTypeFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/Extension/DataCollector/Proxy/ResolvedTypeFactoryDataCollectorProxy.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/form/ResolvedFormTypeFactory.php';

        return $container->privates['form.registry'] = new \Symfony\Component\Form\FormRegistry([new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Form\\FormsCounterparty\\CounterpartySearchType' => ['privates', 'App\\Form\\FormsCounterparty\\CounterpartySearchType', 'getCounterpartySearchTypeService', true],
            'App\\Form\\FormsCounterparty\\CounterpartyType' => ['privates', 'App\\Form\\FormsCounterparty\\CounterpartyType', 'getCounterpartyTypeService', true],
            'App\\Form\\FormsIncomingDocuments\\IncomingDocumentsType' => ['privates', 'App\\Form\\FormsIncomingDocuments\\IncomingDocumentsType', 'getIncomingDocumentsTypeService', true],
            'App\\Form\\FormsIncomingDocuments\\SavingFromFileType' => ['privates', 'App\\Form\\FormsIncomingDocuments\\SavingFromFileType', 'getSavingFromFileTypeService', true],
            'App\\Form\\FormsIncomingDocuments\\SearchInvoiceType' => ['privates', 'App\\Form\\FormsIncomingDocuments\\SearchInvoiceType', 'getSearchInvoiceTypeService', true],
            'App\\Form\\FormsKuDir\\KuDirEditType' => ['privates', 'App\\Form\\FormsKuDir\\KuDirEditType', 'getKuDirEditTypeService', true],
            'App\\Form\\FormsKuDir\\KuDirSearchInvoiceType' => ['privates', 'App\\Form\\FormsKuDir\\KuDirSearchInvoiceType', 'getKuDirSearchInvoiceTypeService', true],
            'App\\Form\\FormsKuDir\\KuDirType' => ['privates', 'App\\Form\\FormsKuDir\\KuDirType', 'getKuDirTypeService', true],
            'App\\Form\\FormsKuDir\\SaveKuDirType' => ['privates', 'App\\Form\\FormsKuDir\\SaveKuDirType', 'getSaveKuDirTypeService', true],
            'App\\Form\\FormsPartNo\\OriginalRoomsType' => ['privates', 'App\\Form\\FormsPartNo\\OriginalRoomsType', 'getOriginalRoomsTypeService', true],
            'App\\Form\\FormsPartNo\\PartNoType' => ['privates', 'App\\Form\\FormsPartNo\\PartNoType', 'getPartNoTypeService', true],
            'App\\Form\\FormsPrice\\CompleteSalesType' => ['privates', 'App\\Form\\FormsPrice\\CompleteSalesType', 'getCompleteSalesTypeService', true],
            'App\\Form\\FormsPrice\\SoldType' => ['privates', 'App\\Form\\FormsPrice\\SoldType', 'getSoldTypeService', true],
            'App\\Form\\FormsRefund\\SearchRefundType' => ['privates', 'App\\Form\\FormsRefund\\SearchRefundType', 'getSearchRefundTypeService', true],
            'App\\Form\\FormsSales\\SearchSalesType' => ['privates', 'App\\Form\\FormsSales\\SearchSalesType', 'getSearchSalesTypeService', true],
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => ['privates', 'form.type.entity', 'getForm_Type_EntityService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => ['privates', 'form.type.color', 'getForm_Type_ColorService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => ['privates', 'form.type.file', 'getForm_Type_FileService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => ['privates', 'form.type.form', 'getForm_Type_FormService', true],
        ], [
            'App\\Form\\FormsCounterparty\\CounterpartySearchType' => '?',
            'App\\Form\\FormsCounterparty\\CounterpartyType' => '?',
            'App\\Form\\FormsIncomingDocuments\\IncomingDocumentsType' => '?',
            'App\\Form\\FormsIncomingDocuments\\SavingFromFileType' => '?',
            'App\\Form\\FormsIncomingDocuments\\SearchInvoiceType' => '?',
            'App\\Form\\FormsKuDir\\KuDirEditType' => '?',
            'App\\Form\\FormsKuDir\\KuDirSearchInvoiceType' => '?',
            'App\\Form\\FormsKuDir\\KuDirType' => '?',
            'App\\Form\\FormsKuDir\\SaveKuDirType' => '?',
            'App\\Form\\FormsPartNo\\OriginalRoomsType' => '?',
            'App\\Form\\FormsPartNo\\PartNoType' => '?',
            'App\\Form\\FormsPrice\\CompleteSalesType' => '?',
            'App\\Form\\FormsPrice\\SoldType' => '?',
            'App\\Form\\FormsRefund\\SearchRefundType' => '?',
            'App\\Form\\FormsSales\\SearchSalesType' => '?',
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => '?',
        ]), ['Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.form.transformation_failure_handling'] ??= new \Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension(NULL));
            yield 1 => ($container->privates['form.type_extension.form.http_foundation'] ?? $container->load('getForm_TypeExtension_Form_HttpFoundationService'));
            yield 2 => ($container->privates['form.type_extension.form.validator'] ?? $container->load('getForm_TypeExtension_Form_ValidatorService'));
            yield 3 => ($container->privates['form.type_extension.form.data_collector'] ?? $container->load('getForm_TypeExtension_Form_DataCollectorService'));
        }, 4), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.repeated.validator'] ??= new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension());
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.submit.validator'] ??= new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension());
        }, 1)], new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_guesser.validator'] ?? $container->load('getForm_TypeGuesser_ValidatorService'));
            yield 1 => ($container->privates['form.type_guesser.doctrine'] ?? $container->load('getForm_TypeGuesser_DoctrineService'));
        }, 2))], new \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy(new \Symfony\Component\Form\ResolvedFormTypeFactory(), ($container->privates['data_collector.form'] ?? self::getDataCollector_FormService($container))));
    }
}
